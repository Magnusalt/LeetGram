@inject ISignedIn User
@inject ApplicationState State

<div class="card my-2" style="width: 400px;">
    <img src="@PostData.Image" class="card-img-top" alt="...">
    <div class="card-body">
        <p class="card-text">@PostData.Caption</p>
        <UnstyledList Items="PostData.Comments.OrderBy(c => c.CommentDate)" TItem="Comment">
            <ListItemTemplate Context="comment">
                <div class="d-flex">
                    <img src="@State.Users[comment.Username].ProfilePicture" class="mr-3" style="height: 40px" alt="">
                    <div class="media-body">
                        <h6 class="mt-2">@comment.Value</h6>
                    </div>
                </div>
            </ListItemTemplate>
            <FooterItem>
                @if (User.IsSignedIn)
                {
                    <div class="d-flex mt-4">
                        <img src="@State.Users[User.Name].ProfilePicture" style="height: 30px" alt=""/>
                        <input type="text" class="ml-3" @bind="_comment"/>
                        <button class="btn btn-info btn-sm ml-3" @onclick="AddComment">Comment</button>
                    </div>
                }
            </FooterItem>
        </UnstyledList>
    </div>
</div>

@code {

    [Parameter]
    public Post PostData { get; set; }

    [Parameter]
    public string Owner { get; set; }

    private string _comment;

    private void AddComment()
    {
        var comment = new Comment {CommentDate = DateTime.Now, Username = User.Name, Value = _comment};
        State.AddComment(Owner, PostData.Id, comment);

        _comment = string.Empty;
    }

}