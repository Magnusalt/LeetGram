@page "/explore"
@inject ApplicationState State
@inject ISignedIn User
@implements IDisposable

@if (State.Users.Count == 0)
{
    <h4>How sad, no users ðŸ˜¥</h4>
}
else if (State.Users.Count == 1 && State.Users.First().Key == User.Name)
{
    <h4>Seems like you are the only one here, go tell your friends!</h4>
}
else
{
    <h4>Check out what others have posted!</h4>
}

<UnstyledList Items="State.Users.Where(kv => kv.Key != User.Name).Select(i => i.Value)" TItem="User">
    <ListItemTemplate Context="user">
        <div class="d-flex">
            <img src="@user.ProfilePicture" style="height: 30px" alt="">
            <NavLink class="nav-link" href="@($"feed/{user.Name}")" Match="NavLinkMatch.All">
                @user.Name
            </NavLink>
        </div>
    </ListItemTemplate>
</UnstyledList>

@code {

    protected override void OnInitialized() => State.NewUserSignedIn += HandleStateChange;

    private void HandleStateChange() => InvokeAsync(StateHasChanged);

    public void Dispose() => State.NewUserSignedIn -= HandleStateChange;

}