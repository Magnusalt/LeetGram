@page "/feed/{username}"
@inject ISignedIn User
@inject ApplicationState State
@implements IDisposable

<div class="container">
    <div class="row border-bottom">
        <div class="media">
            <img src="@_displayUser.ProfilePicture" class="mr-3" alt="...">
            <div class="media-body">
                <h5 class="mt-3">@Username</h5>
            </div>
        </div>
    </div>
    @if (MyFeed)
    {
        <div class="row justify-content-center mt-5">
            <CreatePost AddPostToUser="AddPost"/>
        </div>
    }
    <div class="row justify-content-center">
        <ul class="list-group">
            @foreach (var item in _displayUser.Posts.OrderByDescending(p => p.PostDate))
            {
                <li class="list-group-item">
                    <PostCard PostData="@item" Owner="@_displayUser.Name"/>
                </li>
            }
        </ul>
    </div>
</div>


@code{

    [Parameter]
    public string Username { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _displayUser = State.Users[Username];

        State.PostsUpdated += OnPostWasAdded;
    }

    private bool MyFeed => User.Name == Username;

    private User _displayUser;

    private void OnPostWasAdded(string userName)
    {
        if (userName == _displayUser.Name)
            InvokeAsync(StateHasChanged);
    }

    private void AddPost(Post post)
    {
        State.AddPostToUser(_displayUser, post);
    }

    public void Dispose()
    {
        State.PostsUpdated -= OnPostWasAdded;
    }

}